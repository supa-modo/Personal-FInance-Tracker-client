      {activeTab === 'overview' && (
        <>
          {/* Stats cards */}
          <div className="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
            {/* Net worth card */}
            <div className="bg-white overflow-hidden shadow-lg rounded-xl border border-gray-100">
              <div className="px-6 py-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl p-3">
                    <TbCurrencyDollar className="h-8 w-8 text-white" />
                  </div>
                  <div className="ml-5 w-0 flex-1">
                    <dl>
                      <dt className="text-sm font-medium text-gray-500 truncate">
                        Total Net Worth
                      </dt>
                      <dd className="flex items-baseline">
                        <div className="text-3xl font-bold text-gray-900">
                          {formatCurrency(netWorth)}
                        </div>
                        {change.amount !== 0 && (
                          <div className={`ml-3 flex items-baseline text-sm font-semibold ${
                            change.isPositive ? 'text-green-600' : 'text-red-600'
                          }`}>
                            {change.isPositive ? (
                              <TbArrowUpRight className="self-center flex-shrink-0 h-5 w-5" />
                            ) : (
                              <TbArrowDownRight className="self-center flex-shrink-0 h-5 w-5" />
                            )}
                            <span className="ml-1">
                              {change.isPositive ? '+' : ''}
                              {formatCurrency(change.amount)} ({change.isPositive ? '+' : ''}
                              {change.percentage.toFixed(1)}%)
                            </span>
                          </div>
                        )}
                      </dd>
                    </dl>
                  </div>
                </div>
              </div>
              <div className="bg-gray-50 px-6 py-3">
                <div className="text-sm">
                  <Link to="/financial-sources" className="font-medium text-primary-600 hover:text-primary-500 flex items-center">
                    View all sources
                    <TbChevronRight className="ml-1 h-4 w-4" />
                  </Link>
                </div>
              </div>
            </div>
            
            {/* Total Assets card */}
            <div className="bg-white overflow-hidden shadow-lg rounded-xl border border-gray-100">
              <div className="px-6 py-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0 bg-gradient-to-r from-green-400 to-green-600 rounded-xl p-3">
                    <TbWallet className="h-8 w-8 text-white" />
                  </div>
                  <div className="ml-5 w-0 flex-1">
                    <dl>
                      <dt className="text-sm font-medium text-gray-500 truncate">
                        Total Assets
                      </dt>
                      <dd>
                        <div className="text-3xl font-bold text-gray-900">
                          {formatCurrency(totalAssets)}
                        </div>
                        <div className="mt-1 text-sm text-gray-500">
                          Across {activeSources.length} financial sources
                        </div>
                      </dd>
                    </dl>
                  </div>
                </div>
              </div>
              <div className="bg-gray-50 px-6 py-3">
                <div className="text-sm">
                  <button className="font-medium text-primary-600 hover:text-primary-500 flex items-center">
                    View breakdown
                    <TbChevronRight className="ml-1 h-4 w-4" />
                  </button>
                </div>
              </div>
            </div>
            
            {/* Last Updated card */}
            <div className="bg-white overflow-hidden shadow-lg rounded-xl border border-gray-100">
              <div className="px-6 py-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0 bg-gradient-to-r from-purple-400 to-purple-600 rounded-xl p-3">
                    <TbCalendarStats className="h-8 w-8 text-white" />
                  </div>
                  <div className="ml-5 w-0 flex-1">
                    <dl>
                      <dt className="text-sm font-medium text-gray-500 truncate">
                        Last Updated
                      </dt>
                      <dd>
                        <div className="text-xl font-semibold text-gray-900">
                          {sourceData.length > 0 && sourceData.some(s => s.lastUpdated) ? 
                            formatDate(sourceData.sort((a, b) => 
                              new Date(b.lastUpdated || 0) - new Date(a.lastUpdated || 0)
                            )[0].lastUpdated, { dateStyle: 'medium' }) : 
                            'No updates yet'
                          }
                        </div>
                        <div className="mt-1 text-sm text-gray-500">
                          {sourceData.length > 0 && sourceData.some(s => s.lastUpdated) ? 
                            getRelativeTimeString(sourceData.sort((a, b) => 
                              new Date(b.lastUpdated || 0) - new Date(a.lastUpdated || 0)
                            )[0].lastUpdated) : 
                            'Add your first update'
                          }
                        </div>
                      </dd>
                    </dl>
                  </div>
                </div>
              </div>
              <div className="bg-gray-50 px-6 py-3">
                <div className="text-sm">
                  <button className="font-medium text-primary-600 hover:text-primary-500 flex items-center">
                    Update balances
                    <TbChevronRight className="ml-1 h-4 w-4" />
                  </button>
                </div>
              </div>
            </div>
          </div>
          
          {/* Charts grid */}
          <div className="mt-8 grid grid-cols-1 gap-6 lg:grid-cols-2">
            {/* Net Worth Trend Chart */}
            <div className="bg-white shadow-lg rounded-xl overflow-hidden border border-gray-100">
              <div className="px-6 py-5 border-b border-gray-100">
                <div className="flex items-center justify-between">
                  <h2 className="text-lg font-semibold text-gray-900">Net Worth Trend</h2>
                  <div className="flex items-center space-x-2">
                    <button className="p-1 rounded-md hover:bg-gray-100">
                      <TbEye className="h-5 w-5 text-gray-500" />
                    </button>
                    <button className="p-1 rounded-md hover:bg-gray-100">
                      <TbSettings className="h-5 w-5 text-gray-500" />
                    </button>
                  </div>
                </div>
              </div>
              <div className="px-6 py-4">
                <div className="h-80">
                  <ResponsiveContainer width="100%" height="100%">
                    <AreaChart
                      data={lineChartData}
                      margin={{
                        top: 10,
                        right: 10,
                        left: 0,
                        bottom: 0,
                      }}
                    >
                      <defs>
                        <linearGradient id="colorTotal" x1="0" y1="0" x2="0" y2="1">
                          <stop offset="5%" stopColor="#4F46E5" stopOpacity={0.8}/>
                          <stop offset="95%" stopColor="#4F46E5" stopOpacity={0.1}/>
                        </linearGradient>
                      </defs>
                      <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#f3f4f6" />
                      <XAxis 
                        dataKey="date" 
                        axisLine={false} 
                        tickLine={false} 
                        tick={{ fill: '#6B7280', fontSize: 12 }}
                      />
                      <YAxis 
                        axisLine={false} 
                        tickLine={false} 
                        tick={{ fill: '#6B7280', fontSize: 12 }}
                        tickFormatter={(value) => formatCurrency(value, 'KES', 0)}
                      />
                      <Tooltip 
                        formatter={(value) => formatCurrency(value)}
                        contentStyle={{ 
                          backgroundColor: 'rgba(255, 255, 255, 0.9)', 
                          borderRadius: '8px',
                          boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
                          border: 'none'
                        }}
                      />
                      <Area 
                        type="monotone" 
                        dataKey="total" 
                        stroke="#4F46E5" 
                        strokeWidth={3}
                        fill="url(#colorTotal)" 
                        activeDot={{ r: 6, strokeWidth: 0, fill: '#4F46E5' }} 
                      />
                    </AreaChart>
                  </ResponsiveContainer>
                </div>
              </div>
            </div>

            {/* Asset Distribution Chart */}
            <div className="bg-white shadow-lg rounded-xl overflow-hidden border border-gray-100">
              <div className="px-6 py-5 border-b border-gray-100">
                <div className="flex items-center justify-between">
                  <h2 className="text-lg font-semibold text-gray-900">Asset Distribution</h2>
                  <div className="flex items-center space-x-2">
                    <button className="p-1 rounded-md hover:bg-gray-100">
                      <TbEye className="h-5 w-5 text-gray-500" />
                    </button>
                    <button className="p-1 rounded-md hover:bg-gray-100">
                      <TbSettings className="h-5 w-5 text-gray-500" />
                    </button>
                  </div>
                </div>
              </div>
              <div className="px-6 py-4">
                <div className="h-80">
                  <ResponsiveContainer width="100%" height="100%">
                    <PieChart>
                      <Pie
                        data={pieChartData}
                        cx="50%"
                        cy="50%"
                        labelLine={false}
                        outerRadius={130}
                        innerRadius={70}
                        paddingAngle={2}
                        fill="#8884d8"
                        dataKey="value"
                        label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}
                      >
                        {pieChartData.map((entry, index) => (
                          <Cell 
                            key={`cell-${index}`} 
                            fill={entry.color || `#${Math.floor(Math.random()*16777215).toString(16)}`} 
                            stroke="#fff"
                            strokeWidth={2}
                          />
                        ))}
                      </Pie>
                      <Tooltip 
                        formatter={(value) => formatCurrency(value)}
                        contentStyle={{ 
                          backgroundColor: 'rgba(255, 255, 255, 0.9)', 
                          borderRadius: '8px',
                          boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
                          border: 'none'
                        }}
                      />
                    </PieChart>
                  </ResponsiveContainer>
                </div>
              </div>
            </div>
          </div>
        </>
      )}
